(in-package #:zed.math.geometry.closest-point)

(u:fn-> obb (obb:obb p3:point) p3:point)
(declaim (inline obb))
(defun obb (obb point)
  (declare (optimize speed))
  (let* ((origin (obb:origin obb))
         (size (obb:size obb))
         (-size (v3:negate size))
         (direction (v3:- point origin))
         (rotation (obb:rotation obb))
         (distances (v3:vec (v3:dot direction (m3:get-column rotation 0))
                            (v3:dot direction (m3:get-column rotation 1))
                            (v3:dot direction (m3:get-column rotation 2)))))
    (declare (dynamic-extent -size direction distances))
    (v3:clamp! distances distances -size size)
    (m3:*v3! distances rotation distances)
    (v3:+ origin distances)))
